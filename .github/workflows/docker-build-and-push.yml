# name: Build and Push Docker Image
# on:
#   push:
#     branches:
#       - stage
#       - master
#       - stage-docker
#       - master-docker
# env:
#   HARBOR_REGISTRY_HOST: ${{ fromJSON(toJSON(secrets)).HARBOR_REGISTRY_HOST }}
#   HARBOR_USERNAME: ${{ fromJSON(toJSON(secrets)).HARBOR_USERNAME }}
#   HARBOR_PASSWORD: ${{ fromJSON(toJSON(secrets)).HARBOR_PASSWORD }}
#   HARBOR_PROJECT_NAME: ${{ fromJSON(toJSON(secrets)).HARBOR_PROJECT_NAME }}
#   DOCKER_USERNAME: ${{ fromJSON(toJSON(secrets)).DOCKER_USERNAME }}
#   DOCKER_PASSWORD: ${{ fromJSON(toJSON(secrets)).DOCKER_PASSWORD }}
#   DOCKER_PROJECT_NAME_WEBSITE_STAGE: ${{ fromJSON(toJSON(secrets)).DOCKER_PROJECT_NAME_WEBSITE_STAGE }}
#   DOCKER_PROJECT_NAME_WEBSITE_MASTER: ${{ fromJSON(toJSON(secrets)).DOCKER_PROJECT_NAME_WEBSITE_MASTER }}
#   NEXT_PUBLIC_API_BASE_URL_STAGE: ${{ fromJSON(toJSON(secrets)).NEXT_PUBLIC_API_BASE_URL_STAGE }}
#   NEXT_PUBLIC_BASE_URL_STAGE: ${{ fromJSON(toJSON(secrets)).NEXT_PUBLIC_BASE_URL_STAGE }}
#   NEXT_PUBLIC_SOCKET_API_PATH_STAGE: ${{ fromJSON(toJSON(secrets)).NEXT_PUBLIC_SOCKET_API_PATH_STAGE }}
#   NEXT_PUBLIC_DOMAIN_NAME_STAGE: ${{ fromJSON(toJSON(secrets)).NEXT_PUBLIC_DOMAIN_NAME_STAGE }}
#   NEXT_PUBLIC_SHOW_LOGGER_STAGE: ${{ fromJSON(toJSON(secrets)).NEXT_PUBLIC_SHOW_LOGGER_STAGE }}
#   NEXT_PUBLIC_API_BASE_URL_MASTER: ${{ fromJSON(toJSON(secrets)).NEXT_PUBLIC_API_BASE_URL_MASTER }}
#   NEXT_PUBLIC_BASE_URL_MASTER: ${{ fromJSON(toJSON(secrets)).NEXT_PUBLIC_BASE_URL_MASTER }}
#   NEXT_PUBLIC_SOCKET_API_PATH_MASTER: ${{ fromJSON(toJSON(secrets)).NEXT_PUBLIC_SOCKET_API_PATH_MASTER }}
#   NEXT_PUBLIC_DOMAIN_NAME_MASTER: ${{ fromJSON(toJSON(secrets)).NEXT_PUBLIC_DOMAIN_NAME_MASTER }}
#   NEXT_PUBLIC_SHOW_LOGGER_MASTER: ${{ fromJSON(toJSON(secrets)).NEXT_PUBLIC_SHOW_LOGGER_MASTER }}
# jobs:
#   website_build_and_release_stage:
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/stage'
#     steps:
#       - name: Login to Harbor Hub
#         uses: docker/login-action@v3
#         with:
#           registry: ${{ env.HARBOR_REGISTRY_HOST }}
#           username: ${{ env.HARBOR_USERNAME }}
#           password: ${{ env.HARBOR_PASSWORD}}
#       - uses: actions/checkout@v4
#       - name: Build and push Docker image
#         run: |
#           REPO_NAME=$(basename ${{ github.repository }})
#           CONTAINER_BUILD_IMAGE=${{ env.HARBOR_REGISTRY_HOST  }}/${{ env.HARBOR_PROJECT_NAME  }}/${REPO_NAME}/website/${{ github.ref_name }}:v0.1.${{ github.run_number }}
#           CONTAINER_RELEASE_IMAGE=${{ env.HARBOR_REGISTRY_HOST  }}/${{ env.HARBOR_PROJECT_NAME  }}/${REPO_NAME}/website/${{ github.ref_name }}:latest
#           docker build --build-arg NEXT_PUBLIC_API_BASE_URL=$NEXT_PUBLIC_API_BASE_URL_STAGE --build-arg NEXT_PUBLIC_BASE_URL=$NEXT_PUBLIC_BASE_URL_STAGE --build-arg NEXT_PUBLIC_SOCKET_API_PATH=$NEXT_PUBLIC_SOCKET_API_PATH_STAGE --build-arg NEXT_PUBLIC_DOMAIN_NAME=$NEXT_PUBLIC_DOMAIN_NAME_STAGE --build-arg NEXT_PUBLIC_SHOW_LOGGER=$NEXT_PUBLIC_SHOW_LOGGER_STAGE ./ -t $CONTAINER_BUILD_IMAGE
#           docker push $CONTAINER_BUILD_IMAGE
#           docker tag $CONTAINER_BUILD_IMAGE $CONTAINER_RELEASE_IMAGE
#           docker push $CONTAINER_RELEASE_IMAGE
#   website_build_and_release_master:
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/master'
#     steps:
#       - name: Login to Harbor Hub
#         uses: docker/login-action@v3
#         with:
#           registry: ${{ env.HARBOR_REGISTRY_HOST }}
#           username: ${{ env.HARBOR_USERNAME }}
#           password: ${{ env.HARBOR_PASSWORD}}
#       - uses: actions/checkout@v4
#       - name: Build and push Docker image
#         run: |
#           REPO_NAME=$(basename ${{ github.repository }})
#           CONTAINER_BUILD_IMAGE=${{ env.HARBOR_REGISTRY_HOST  }}/${{ env.HARBOR_PROJECT_NAME  }}/${REPO_NAME}/website/${{ github.ref_name }}:v0.1.${{ github.run_number }}
#           CONTAINER_RELEASE_IMAGE=${{ env.HARBOR_REGISTRY_HOST  }}/${{ env.HARBOR_PROJECT_NAME  }}/${REPO_NAME}/website/${{ github.ref_name }}:latest
#           docker build --build-arg NEXT_PUBLIC_API_BASE_URL=$NEXT_PUBLIC_API_BASE_URL_MASTER --build-arg NEXT_PUBLIC_BASE_URL=$NEXT_PUBLIC_BASE_URL_MASTER --build-arg NEXT_PUBLIC_SOCKET_API_PATH=$NEXT_PUBLIC_SOCKET_API_PATH_MASTER --build-arg NEXT_PUBLIC_DOMAIN_NAME=$NEXT_PUBLIC_DOMAIN_NAME_MASTER --build-arg NEXT_PUBLIC_SHOW_LOGGER=$NEXT_PUBLIC_SHOW_LOGGER_MASTER ./ -t $CONTAINER_BUILD_IMAGE
#           docker push $CONTAINER_BUILD_IMAGE
#           docker tag $CONTAINER_BUILD_IMAGE $CONTAINER_RELEASE_IMAGE
#           docker push $CONTAINER_RELEASE_IMAGE
#   website_build_and_release_stage_docker:
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/stage-docker'
#     steps:
#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ env.DOCKER_USERNAME }}
#           password: ${{ env.DOCKER_PASSWORD}}
#       - uses: actions/checkout@v4
#       - name: Build and push Docker image to Docker Hub
#         run: |
#           VERSION_TAG=v0.1.${{ github.run_number }}
#           CONTAINER_BUILD_IMAGE=${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_PROJECT_NAME_WEBSITE_STAGE }}:$VERSION_TAG
#           CONTAINER_RELEASE_IMAGE=${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_PROJECT_NAME_WEBSITE_STAGE }}:latest
#           docker build --build-arg NEXT_PUBLIC_API_BASE_URL=$NEXT_PUBLIC_API_BASE_URL_STAGE --build-arg NEXT_PUBLIC_BASE_URL=$NEXT_PUBLIC_BASE_URL_STAGE --build-arg NEXT_PUBLIC_SOCKET_API_PATH=$NEXT_PUBLIC_SOCKET_API_PATH_STAGE --build-arg NEXT_PUBLIC_DOMAIN_NAME=$NEXT_PUBLIC_DOMAIN_NAME_STAGE --build-arg NEXT_PUBLIC_SHOW_LOGGER=$NEXT_PUBLIC_SHOW_LOGGER_STAGE ./ -t $CONTAINER_BUILD_IMAGE
#           docker push $CONTAINER_BUILD_IMAGE
#           docker tag $CONTAINER_BUILD_IMAGE $CONTAINER_RELEASE_IMAGE
#           docker push $CONTAINER_RELEASE_IMAGE
#   website_build_and_release_master_docker:
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/master-docker'
#     steps:
#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ env.DOCKER_USERNAME }}
#           password: ${{ env.DOCKER_PASSWORD}}
#       - uses: actions/checkout@v4
#       - name: Build and push Docker image to Docker Hub
#         run: |
#           VERSION_TAG=v0.1.${{ github.run_number }}
#           CONTAINER_BUILD_IMAGE=${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_PROJECT_NAME_WEBSITE_MASTER }}:$VERSION_TAG
#           CONTAINER_RELEASE_IMAGE=${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_PROJECT_NAME_WEBSITE_MASTER }}:latest
#           docker build --build-arg NEXT_PUBLIC_API_BASE_URL=$NEXT_PUBLIC_API_BASE_URL_MASTER --build-arg NEXT_PUBLIC_BASE_URL=$NEXT_PUBLIC_BASE_URL_MASTER --build-arg NEXT_PUBLIC_SOCKET_API_PATH=$NEXT_PUBLIC_SOCKET_API_PATH_MASTER --build-arg NEXT_PUBLIC_DOMAIN_NAME=$NEXT_PUBLIC_DOMAIN_NAME_MASTER --build-arg NEXT_PUBLIC_SHOW_LOGGER=$NEXT_PUBLIC_SHOW_LOGGER_MASTER ./ -t $CONTAINER_BUILD_IMAGE
#           docker push $CONTAINER_BUILD_IMAGE
#           docker tag $CONTAINER_BUILD_IMAGE $CONTAINER_RELEASE_IMAGE
#           docker push $CONTAINER_RELEASE_IMAGE
